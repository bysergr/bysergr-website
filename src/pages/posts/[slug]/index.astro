---
import { type CollectionEntry, getCollection } from "astro:content";
import { getPageNumbersPosts } from "@/utils/getPageNumbers";
import { slugifyPost } from "@/utils/slugify";
import PostLayout from "@/layouts/PostLayout.astro";
import ProjectList from "@/components/widgets/PostList.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import PostList from "@/components/widgets/PostList.astro";

export interface Props {
  post: CollectionEntry<"blog">;
  sortedPosts: CollectionEntry<"blog">[];
  amountPages: number[];
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  const sortedPosts = getSortedPosts(posts);

  const postResult = posts.map((post) => ({
    params: { slug: slugifyPost(post.data) },
    props: { post },
  }));

  const amountPages = getPageNumbersPosts(posts.length);
  const pagePaths = getPageNumbersPosts(posts.length).map((pageNum) => ({
    params: { slug: String(pageNum) },
    props: { sortedPosts, amountPages },
  }));

  return [...postResult, ...pagePaths];
}

const { post, sortedPosts, amountPages } = Astro.props;
const { slug } = Astro.params;

const currentPage =
  slug && !isNaN(Number(slug)) && amountPages.includes(Number(slug))
    ? Number(slug)
    : 0;
---

{
  post ? (
    <PostLayout post={post} />
  ) : (
    <PostList
      sortedPosts={sortedPosts}
      amountPages={amountPages.length}
      numberPage={currentPage}
    />
  )
}
